import { i18n, type Locale } from "../../i18n-config";

import type { Metadata } from "next";
import { Roboto_Condensed } from "next/font/google";
import "../globals.css";
import { Header } from "@/components/Layout/Header";
import { Content } from "@/components/Layout/Content";
import { Footer } from "@/components/Layout/Footer";
import { Container } from "@/components/shared/Container";
import { getDictionary } from "../../../get-dictionary";

const robotoCOndensed = Roboto_Condensed({
  variable: "--roboto-condensed",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export async function generateStaticParams() {
  return i18n.locales.map((locale) => ({ lang: locale }));
}

export default async function Root(props: {
  children: React.ReactNode;
  params: Promise<{ lang: Locale }>;
}) {
  const params = await props.params;

  const dictionary = await getDictionary(params.lang);

  const { children } = props;
  return (
    <html lang={params.lang}>
      <body className={`${robotoCOndensed.variable} antialiased`}>
        <Header title={dictionary.title} />
        <Content>
          <Container>{children}</Container>
          <Footer />
        </Content>
      </body>
    </html>
  );
}
